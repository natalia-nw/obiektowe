import java.lang.StringBuffer;
import java.math.*;
import java.util.Scanner;
import static java.lang.Character.*;

public class Main {

    public static int countChar(String str, char c){
        int count = 0;
        StringBuffer sb = new StringBuffer(str);
        for(int i = 0; i <= sb.length()-1; i++){
            if(sb.charAt(i) == c)
                count++;
        }
        return count;
    }
    public static int countSubStr(String str, String subStr){
        int count = 0;
        StringBuffer sb = new StringBuffer(str);
        if(subStr.length() > str.length())
            return 0;
        for(int i = 0; i <= sb.length()-1; i++){
            if((sb.length()-1) >= i+subStr.length()-1){
                String s = sb.substring(i, i+subStr.length());
                if(s.equals(subStr)) {

                    count++;
                }
            }
        }
        return count;
    }
    public static String middle(String s){

        StringBuffer sb = new StringBuffer(s);
        StringBuffer str = new StringBuffer();
        if (sb.length()%2 == 0){
            str.append(sb.charAt(sb.length()/2-1)).append(sb.charAt(sb.length()/2));
        }
        if(s.length()%2 != 0){
            str.append(sb.charAt(sb.length()/2));
        }
        return str.toString();
    }
    public static String repeat(String s, int n){
        StringBuffer sb = new StringBuffer();
        String str = s;
        for(int i = 0; i <= n-1; i++){
            sb.append(str);
        }
        return sb.toString();
    }
    public static int[] where(String str, String subStr){
        int n = countSubStr(str, subStr);
        int[] where = new int[n];
        int j = 0;
        StringBuffer sb = new StringBuffer(str);
        for(int i = 0; i <= sb.length()-1; i++){
            if((sb.length()-1) >= i+subStr.length()-1){
                String s = sb.substring(i, i+subStr.length());
                if(s.equals(subStr)) {
                    where[j] = i;
                    j++;

                }
            }
        }
        return where;
    }
    public static String change(String str){
        StringBuffer changed = new StringBuffer();
        StringBuffer sb = new StringBuffer(str);
        for(int i = 0; i <=sb.length()-1; i++) {
            if (isLowerCase(sb.charAt(i)))
                changed.append(toUpperCase(sb.charAt((i))));
            if(isUpperCase(sb.charAt(i)))
                changed.append(toLowerCase(sb.charAt(i)));
        }
        return changed.toString();
    }
    public static String nice(String str , char separator, int range){
        StringBuffer decimal = new StringBuffer();
        StringBuffer sb = new StringBuffer(str);
        int count = 0;
        for(int i = sb.length()-1; i >=0; i--){
            if(count  == range){
                decimal.append(separator);
                decimal.append(sb.charAt(i));
                count = 0;
            }
            else
                decimal.append(sb.charAt(i));
            count++;
        }
        return decimal.reverse().toString();
    }
    public static BigInteger seeds(int n){
        BigInteger wynik = new BigInteger("0");
        BigInteger poprzedni = new BigInteger("1");
        BigInteger aktualny = new BigInteger("1");
        if(n != 0){
            for(int i = 1; i <=n; i++){
                for(int j = 1; j<=n; j++) {
                    wynik = wynik.add(aktualny);
                    aktualny = poprzedni.multiply(new BigInteger("2"));
                    poprzedni = aktualny;
                }
            }
        }
        return wynik;
    }
    public static BigDecimal odsetki(double k, double p, int n){
        BigDecimal odsetki = new BigDecimal("1.0");
        odsetki = odsetki.add(new BigDecimal(""+p/100)).pow(n).multiply(new BigDecimal(""+k)).multiply(new BigDecimal(""+k)).multiply(new BigDecimal("0.001"));
        return odsetki;
    }

    public static void main(String[] args) {
        String s1 = "mhm";
        char c1 = 'm';
        System.out.println("w napisie " + s1 + " znak " + c1 + " wystepuje " + countChar(s1, c1) + " razy");

        String s2 = "ahaahaaha";
        String sub = "aha";
        System.out.println("w napisie " + s2 + " napis " + sub + " wystepuje " + countSubStr(s2, sub) + " razy");

        Scanner scn = new Scanner(System.in);
        System.out.println("podaj napis: ");
        String s3 = scn.next();
        System.out.println("srodkowy znak/znaki w napisie " + s3 + " to " + middle(s3));

        //Scanner scn = new Scanner(System.in);
        System.out.println("podaj napis: ");
        String s4 = scn.next();
        System.out.println(repeat(s4, 3));

        String s5 = "hohoho";
        String sub5 = "ho";
        int[] tab = where(s5, sub5);
        for(int i = 0; i <=tab.length-1; i++){
            System.out.println(tab[i]);
        }

        String s6 = "qWeRtY";
        System.out.println("zmiana " + s6 + " na " + change(s6));

        System.out.println(nice("1234567891", '`', 3));

        System.out.println(seeds(3));

        System.out.println(odsetki(1000, 1, 5));
    }
}
